version: '3.8'


services:
  db:
    container_name: postgres
    image: postgres:14.3-bullseye
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./volumes/postgres/data/:/var/lib/postgresql/data/
    env_file:
      - ./.env

  amqp:
    container_name: rabbitmq
    image: rabbitmq:3.10.5-management
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./volumes/rabbitmq/data/:/var/lib/rabbitmq/
      - ./volumes/rabbitmq/log/:/var/log/rabbitmq
    env_file:
      - ./.env

  api:
    container_name: api
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    image: api:latest
    pull_policy: never
    restart: always
    expose:
      - 8800
    depends_on:
      - db
      - amqp
    env_file:
      - ./.env

  nginx:
    container_name: nginx
    image: nginx:stable
    restart: always
    ports:
      - 80:80
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/site.conf:/etc/nginx/conf.d/site.conf:ro
    depends_on:
      - api

  base:
    container_name: base
    build:
      context: .
      dockerfile: docker/base/Dockerfile
    command: ["sleep", "inf"]

  admin:
    container_name: admin
    depends_on:
      - db
      - amqp
    build:
      context: .
      dockerfile: docker/admin/Dockerfile
    ports:
      - "${DJANGO_HOST:-127.0.0.1}:${DJANGO_PORT:-58000}:8000"
    entrypoint: ["/app/docker/admin/entrypoint.sh"]
    command: ["python3", "manage.py", "runserver", "0.0.0.0:${DJANGO_PORT:-8000}"]
    tty: true
    volumes:
      - './admin/:/app/admin/'
    env_file:
    - ./.env

  scheduler:
    container_name: scheduler
    depends_on:
      - db
      - amqp
    build:
      context: .
      dockerfile: docker/scheduler/Dockerfile
    entrypoint: ["/app/docker/scheduler/entrypoint.sh"]
    command: celery -A scheduler.app beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    tty: true
    volumes:
      - './admin/:/app/admin/'
    env_file:
      - ./.env